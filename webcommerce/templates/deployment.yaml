apiVersion: apps/v1
kind: Deployment
metadata:
  name: webcommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webcommerce
  template:
    metadata:
      labels:
        app: webcommerce
    spec:
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: wordpress
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - name: http
              containerPort: 8080
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          env:
            - name: WORDPRESS_DATABASE_HOST
              value: "{{ .Values.env.WORDPRESS_DATABASE_HOST }}"
            - name: WORDPRESS_DATABASE_PORT_NUMBER
              value: "{{ .Values.env.WORDPRESS_DATABASE_PORT_NUMBER }}"
            - name: WORDPRESS_DATABASE_NAME
              value: "{{ .Values.env.WORDPRESS_DATABASE_NAME }}"
            - name: WORDPRESS_DATABASE_USER
              value: "{{ .Values.env.WORDPRESS_DATABASE_USER }}"
            - name: WORDPRESS_DATABASE_PASSWORD
              value: "{{ .Values.env.WORDPRESS_DATABASE_PASSWORD }}"
            - name: WORDPRESS_ENABLE_DATABASE_SSL
              value: "{{ .Values.env.WORDPRESS_ENABLE_DATABASE_SSL }}"
          volumeMounts:
            - name: wp-pvc
              mountPath: "{{ .Values.persistence.mountPath }}"
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/bash"
                  - "-c"
                  - "sleep 120 && /install-woocommerce.sh"
      volumes:
        - name: wp-pvc
          persistentVolumeClaim:
            claimName: "{{ .Values.persistence.claimName }}"
