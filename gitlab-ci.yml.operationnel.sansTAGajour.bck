stages:
  - build
  - test
  - push
  - deploy
  - argocd
  - cleanup

variables:
  IMAGE_NAME: "$SALIM_DOCKERHUB_USERNAME/webcommerce"
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
  MYSQL_IMAGE: "mysql"
  MYSQL_TAG: "5.7"

build:
  stage: build
  tags:
    - gitlabsalim
  script:
    - docker build -t "$IMAGE_NAME:$IMAGE_TAG" webcommerce

test:
  stage: test
  tags:
    - gitlabsalim
  needs:
    - build
  script:
    - docker compose up -d
    - |
      IP=$(docker network inspect bridge --format '{{(index .IPAM.Config 0).Gateway}}')
      echo "IP Docker bridge détectée : $IP"
      echo "⏳ Test de disponibilité WordPress via /wp-admin"
      for i in $(seq 1 30); do
        if curl -sSLf http://$IP:8080/wp-admin > report.txt; then
          if grep -q "wp-login.php" report.txt; then
            echo "✅ WordPress accessible avec WooCommerce"
            break
          fi
        fi
        echo "⏳ Tentative $i - WordPress non disponible, attente 5s"
        sleep 5
        if [ $i -eq 30 ]; then
          echo "❌ Échec WordPress"
          cat report.txt
          exit 1
        fi
      done
  after_script:
    - docker compose down
  artifacts:
    paths:
      - report.txt
    expire_in: 1h

push:
  stage: push
  tags:
    - gitlabsalim
  needs:
    - test
  rules:
    - if: '$CI_COMMIT_BRANCH == "salim"'
      when: on_success
    - when: never
  script:
    - echo "$SALIM_DOCKERHUB_PASSWORD" | docker login -u "$SALIM_DOCKERHUB_USERNAME" --password-stdin
    - docker push "$IMAGE_NAME:$IMAGE_TAG"

deploy:
  stage: deploy
  tags:
    - gitlabsalim
  needs:
    - push
  rules:
    - if: '$CI_COMMIT_BRANCH == "salim"'
      when: on_success
    - when: never
  image: alpine/helm:3.8.0
  script:
    - echo "$SALIM_KUBECONFIG_BASE64" | base64 -d > kubeconfig
    - export KUBECONFIG=$PWD/kubeconfig
    - kubectl create namespace deploy --dry-run=client -o yaml | kubectl apply -f -
    - helm upgrade --install mysqlcommerce ./mysqlcommerce --namespace deploy --set image.repository="$MYSQL_IMAGE" --set image.tag="$MYSQL_TAG" --set-string mysqlRootPassword="1234" --set persistence.enabled=true --set persistence.size=10Gi --set persistence.storageClass=local-path
    - helm upgrade --install webcommerce ./webcommerce --namespace deploy --set image.repository="$IMAGE_NAME" --set image.tag="$IMAGE_TAG" --set image.pullPolicy=Always --set persistence.storageClass=local-path
    - kubectl get pods -n deploy

argocd:
  stage: argocd
  tags:
    - gitlabsalim
  needs:
    - deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "salim"'
      when: on_success
    - when: never
  image: alpine/git
  script:
    - git clone https://oauth2:${SALIM_GITHUB_TOKEN}@github.com/dst-webservice/argocd.git argocd-repo
    - cd argocd-repo
    - git checkout main
    - rm -rf webcommerce mysqlcommerce
    - cp -r ../webcommerce ./webcommerce
    - cp -r ../mysqlcommerce ./mysqlcommerce
    - git config user.email "ci@example.com"
    - git config user.name "GitLab CI"
    - git add webcommerce mysqlcommerce
    - git commit -m "🚀 Mise à jour des charts Helm via pipeline GitLab CI" || echo "Aucun changement à valider"
    - git push origin main

cleanup:
  stage: cleanup
  tags:
    - gitlabsalim
  needs:
    - argocd
  script:
    - docker system prune -af
    - kubectl delete namespace deploy --ignore-not-found
